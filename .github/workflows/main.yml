name: Local-Action-Test

on:
  push:
    branches:
      - develop
      - master
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      name: Set up Node.js
      with:
        node-version-file: ".nvmrc"

    # Build
    - name: "Install dependencies and build"
      run: |
        npm i -g npm@latest
        npm ci
        npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Test ssm-to-env local json
      uses: ./
      id: ssm-to-env-local-json
      with:
        ssm-path: /actions-testing/test-parameter
        decryption: false

    - name: Test ssm-to-env local encrypted
      uses: ./
      id: ssm-to-env-local-encrypted
      with:
        ssm-path: /actions-testing/test-parameter-encrypted
        decryption: true

    - name: Test ssm-to-env local non-json
      uses: ./
      id: ssm-to-env-local-non-json
      with:
        ssm-path: /actions-testing/test-parameter-basic
        decryption: false

    - name: Test for Env Variables
      run: |
        echo "Testing if parameter values get set properly:"
        printenv

    # Bump version if on main branch
    - name: Bump version and push tag
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main,master
        pre_release_branches: dev, develop

    # Publish
    - name: Create a GitHub release
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
        generateReleaseNotes: true
        allowUpdates: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
